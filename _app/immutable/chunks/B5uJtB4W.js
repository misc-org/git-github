import{a,t as o}from"./DRESQwUk.js";import"./0HnB5Z8J.js";import{a7 as i,a8 as p}from"./DfInAFDf.js";const d={title:"GitHub アカウントと SSH キーの作成"},{title:l}=d;var n=o("<h1></h1> <p>Git はバージョン管理システムの一つで、GitHub は Git を利用したプロジェクトのホスティングサービスです。</p> <p>おそらく、これを読む多くの方は、 Git といわれてもピンとこないと思いますので、まずは Git について簡単に説明します。</p> <h2>Git とは</h2> <p>Git は、ファイルの変更履歴を記録してくれるツールです。ファイルの変更履歴を記録しておくことで、過去の状態に戻したり、複数人での開発時に競合したお互いの変更を取り込んだりすることが容易になります。</p> <p>Git は、ファイルの変更履歴を記録するための「リポジトリ」という単位で管理されます。リポジトリは、ファイルの変更履歴を記録するための一つのかたまりのようなものです。</p> <p>私達は、リポジトリに対して下記のような操作を行います。</p> <table><thead><tr><th>操作</th><th>内容</th></tr></thead><tbody><tr><td>init</td><td>リポジトリを初期化する</td></tr><tr><td>clone</td><td>リポジトリを複製する</td></tr><tr><td>add</td><td>ファイルをステージングエリアに追加する</td></tr><tr><td>commit</td><td>ステージングエリアに追加されたファイルをリポジトリに記録する</td></tr><tr><td>push</td><td>ローカルリポジトリの変更をリモートリポジトリに反映する</td></tr><tr><td>pull</td><td>リモートリポジトリの変更をローカルリポジトリに反映する</td></tr><tr><td>branch</td><td>リポジトリの履歴を分岐させる</td></tr><tr><td>merge</td><td>リポジトリの履歴を統合する</td></tr><tr><td>rebase</td><td>リポジトリの履歴を整理する</td></tr><tr><td>tag</td><td>リポジトリの特定のコミットに名前をつける</td></tr><tr><td>log</td><td>リポジトリの履歴を表示する</td></tr></tbody></table> <p>これらの操作を使いこなすことで、 Git を効率的に利用することができます。</p>",1);function h(r){var t=n(),e=i(t);e.textContent=l,p(16),a(r,t)}const _=Object.freeze(Object.defineProperty({__proto__:null,default:h,metadata:d},Symbol.toStringTag,{value:"Module"}));export{_};
